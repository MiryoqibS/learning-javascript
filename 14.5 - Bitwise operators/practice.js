/*
== Задача 1 с сайта ==
Побитовый оператор и значение
Почему побитовые операции в примерах ниже не меняют число? Что они делают внутри?

console.log( 123 ^ 0 ); // 123
console.log( 0 ^ 123 ); // 123
console.log( ~~123 ); // 123
*/

console.log("");
console.log("Задача 1");

console.log( 123 ^ 0 ); // 123 (XOR с нулём не меняет число: 123 ^ 0 === 123) 
console.log( 0 ^ 123 ); // 123 (XOR симметричен: 0 ^ 123 === 123)
console.log( ~~123 ); // 123 (~~x альтернатива Math.trunc(x))

/*
== Задача 2 с сайта ==
Проверка, целое ли число
Напишите функцию isInteger(num), которая возвращает true, если num – целое число, иначе false.

console.log( isInteger(1) ); // true
console.log( isInteger(1.5) ); // false
console.log( isInteger(-0.5) ); // false
*/

console.log("");
console.log("Задача 2");


const isInteger = (num) => {
    // Есть ограничение ~~x работает только с числами в пределах 32-битного диапазона (-2^31 до 2^31 - 1)
    // return (~~num) === num;
    return Number.isInteger(num);
};

console.log( isInteger(1) ); // true
console.log( isInteger(1.5) ); // false
console.log( isInteger(-0.5) ); // false

/*
== Задача 3 с сайта ==
Симметричны ли операции ^, |, &?
Верно ли, что для любых a и b выполняются равенства ниже?

(a ^ b) == (b ^ a)
(a & b) == (b & a)
(a | b) == (b | a)
Иными словами, при перемене мест – всегда ли результат останется тем же?
*/

console.log("");
console.log("Задача 3");

const a = 1;
const b = 1;

console.log((a ^ b) == (b ^ a)) // true
console.log((a & b) == (b & a)) // true
console.log((a | b) == (b | a)) // true


/*
== Задача 4 с сайта ==
Почему результат разный?
Почему результат второго console.log такой странный?

console.log( 123456789 ^ 0 ); // 123456789
console.log( 12345678912345 ^ 0 ); // 1942903641
*/

console.log("");
console.log("Задача 4");

console.log( 123456789 ^ 0 ); // 123456789
console.log( 12345678912345 ^ 0 ); // 1942903641
// Потому что оператор ^ работает в пределах диапазона 32-битного числа
// Число 12345678912345 выходит за пределы int32, поэтому оно преобразуется (обрезается) перед применением ^
